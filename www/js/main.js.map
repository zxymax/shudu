{"version":3,"sources":["webpack:///webpack/bootstrap ac1ed1a63be7c56f5686","webpack:///./js/index.js","webpack:///./js/toolkit.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,MAAM;AACxC,8CAA6C,UAAU;AACvD,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,c;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,4BAA2B,UAAU;AACrC,MAAK;AACL;AACA;AACA,uBAAsB,cAAc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,6B","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ac1ed1a63be7c56f5686","const toolkit = require('./toolkit')\r\n\r\n// 绘制九宫格类\r\nclass Grid {\r\n    constructor(container) {\r\n        this._$container = container\r\n    }\r\n    build() {\r\n        // 通过 toolkit.makeMatrix() 生成数组\r\n        const matrix = toolkit.makeMatrix()\r\n        // 定义 span div class样式\r\n        const rowGroupClasses = [\"row-g-top\", \"row-g-middle\", \"row-g-bottom\"]\r\n        const colGroupClasses = [\"col-g-left\", \"col-g-center\", \"col-g-right\"]\r\n        /**\r\n         * @param rowValues 每一行\r\n         * @param cellValues 每一列\r\n         * @description 将每一个元素映射成一个span\r\n         */\r\n        const $cells = matrix.map(rowValues => rowValues\r\n            .map((cellValues, colIndex) => {\r\n                return $(\"<span>\")\r\n                    .addClass(colGroupClasses[colIndex % 3])\r\n                    .text(cellValues)\r\n            }))\r\n        // 每行span生成一个div\r\n        const $divArray = $cells.map(($spanArray, rowIndex) => {\r\n            return $(\"<div>\")\r\n                .addClass(\"row\")\r\n                .addClass(rowGroupClasses[rowIndex % 3])\r\n                .append($spanArray)\r\n        })\r\n        // 将每行的div加到主容器container当中\r\n        this._$container.append($divArray)\r\n        \r\n    }\r\n    layout() {\r\n        const width = $(\"span:first\", this._$container).width()\r\n        $(\"span\", this._$container)\r\n            .height(width)\r\n            .css({\r\n                \"line-height\": `${width}px`,\r\n                \"font-size\": width < 32 ? `${width / 2}px` : \"\"\r\n            })\r\n    }\r\n}\r\n\r\n// 生成实例构建九宫格\r\nconst grid = new Grid($(\"#container\"))\r\ngrid.build()\r\ngrid.layout()\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/index.js\n// module id = 0\n// module chunks = 0","const matrixTool = {\r\n    makeRow( v = 0 ) {\r\n        let array = new Array(9)\r\n        array.fill(v)\r\n        return array\r\n    },\r\n    makeMatrix( v = 0 ) {\r\n        return Array.from({length: 9}, () => this.makeRow(v))\r\n    },\r\n    shuffle(array) {\r\n        let endIndex = array.length - 2\r\n        for(let i = 0; i < endIndex; i++) {\r\n            let j = i + ( Math.floor(Math.random() *  (array.length - i)) );\r\n            [array[i], array[j]] = [array[j], array[i]]\r\n        }\r\n        return array\r\n    }\r\n}\r\nmodule.exports = matrixTool;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/toolkit.js\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}